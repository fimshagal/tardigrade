/* Tardigrade store v1.1.8 */

/* Created by fSha | fimashagal@gmail.com */
           
/*
 * Creative Commons Attribution 4.0 International (CC BY 4.0)
 *
 * You are free to:
 *
 * - Share — copy and redistribute the material in any medium or format
 * - Adapt — remix, transform, and build upon the material for any purpose, even commercially.
 *
 * Under the following terms:
 *
 * - Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.
 */
var TardigradeStore=function(d){"use strict";var g=Object.defineProperty;var L=(d,o,n)=>o in d?g(d,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):d[o]=n;var p=(d,o,n)=>(L(d,typeof o!="symbol"?o+"":o,n),n);var o=(i=>(i.Null="null",i.Undefined="undefined",i.Function="function",i.AsyncFunction="asyncfunction",i.Number="number",i.String="string",i.Boolean="boolean",i.Array="array",i.Object="object",i))(o||{});const n=i=>Object.prototype.toString.call(i).replace(/^\[object (.+)\]$/,"$1").toLowerCase(),c=i=>{const r=n(i);return r!=="null"&&r!=="undefined"},f=i=>{const r=n(i);return r==="string"||r==="number"||r==="symbol"},l=(i,r)=>Object.prototype.hasOwnProperty.call(i,r);class v{constructor(r,e){p(this,"_resolvers",{});p(this,"_props",{});p(this,"_resolverListenerHandlers",{});p(this,"_propListenerHandlers",{});p(this,"_listenerHandlers",[]);p(this,"_alive",!0);p(this,"_sessionKey",null);if(!r)throw Error("Tardigrade constructor error");this._sessionKey=r}addResolver(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(n(e)!==o.Function&&n(e)!==o.AsyncFunction){console.error("Tardigrade: resolver have to be a function");return}if(l(this._resolvers,r)){console.error("Tardigrade: resolver has been planted");return}this._resolvers[r]=e}setResolver(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(n(e)!==o.Function&&n(e)!==o.AsyncFunction){console.error("Tardigrade: resolver have to be a function");return}if(!l(this._resolvers,r)){console.error("Tardigrade: resolver has been planted");return}this._resolvers[r]=e}removeResolver(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}l(this._resolvers,r)&&(delete this._resolvers[r],delete this._resolverListenerHandlers[r])}async callResolver(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!l(this._resolvers,r)){console.error("Tardigrade: this resolver hasn't been created yet or been deleted");return}const e=await this._resolvers[r](this.props);this.handleOnCallResolver(r,e),l(this._resolverListenerHandlers,r)&&this._resolverListenerHandlers[r].forEach(s=>s(e))}addResolverListener(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!l(this._resolvers,r)){console.error(`Tardigrade: there is no resolver with name "${r}"`);return}l(this._resolverListenerHandlers,r)||(this._resolverListenerHandlers[r]=[]),this._resolverListenerHandlers[r].push(e)}removeResolverListener(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}l(this._resolverListenerHandlers,r)&&(this._resolverListenerHandlers[r]=this._resolverListenerHandlers[r].filter(s=>s!==e))}removeAllResolverListeners(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}l(this._resolverListenerHandlers,r)&&delete this._resolverListenerHandlers[r]}addProp(r,e){this.silentAddProp(r,e),this.handleOnSetProp(this._props[r])}removeProp(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!this.hasProp(r)){console.error("Tardigrade: prop can't be deleted, you have to remove prop first");return}this.removeAllPropListeners(r),delete this._props[r]}setProp(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!this.hasProp(r)){console.error(`Tardigrade: prop "${r}" wasn't registered. You have to add this prop first`);return}const s=(h,u)=>{this._props[h].value=u,this.handleOnSetProp(this._props[h])},t=this._props[r],a=n(e);if(!c(e)){s(r,null);return}if(t.type!==a){console.error(`Tardigrade: new value must have same type as initial value for prop "${r}"`);return}if(!t.isValueScalar)try{JSON.stringify(e)}catch{console.error("Tardigrade: complex data has to be json-friendly");return}s(r,e)}addPropListener(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!this.hasProp(r)){console.error(`Tardigrade: prop "${r}" wasn't registered. You have to add this prop first`);return}this.isPropListened(r)||(this._propListenerHandlers[r]=[]),this._propListenerHandlers[r].push(e)}removePropListener(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!this.isPropListened(r)){console.error(`Tardigrade: prop "${r}" doesn't have any listeners`);return}this._propListenerHandlers[r]=this._propListenerHandlers[r].filter(s=>s!==e)}removeAllPropListeners(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(!this.isPropListened(r)){console.warn(`Tardigrade: prop "${r}" doesn't have any listeners`);return}delete this._propListenerHandlers[r]}prop(r){if(!this._alive)return console.error("Tardigrade: this store doesn't support yet"),null;if(!this.hasProp(r))return console.error(`Tardigrade: prop "${r}" wasn't registered. You have to add this prop first`),null;const e=this._props[r];return e.isValueScalar?e.value:this.cloneComplexData(e.value)}hasProp(r){return this._alive?l(this._props,r):(console.error("Tardigrade: this store doesn't support yet"),!1)}addListener(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}this._listenerHandlers.push(r)}removeListener(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}this._listenerHandlers=this._listenerHandlers.filter(e=>e!==r)}removeAllListeners(){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}this._listenerHandlers=[]}importResolvers(r,e){const s=r.exportAllResolvers(this._sessionKey);this._resolvers=e?{...this._resolvers,...s}:{...s,...this._resolvers}}importProps(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}const s=r.props;Object.entries(s).forEach(([t,a])=>{if(this.hasProp(t)){if(!e)return;this.setProp(t,a)}else this.addProp(t,a)})}merge(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}const s=Object.keys(r.props);this.silentImportProps(r,e),this.importAllPropsListenerHandlers(r,e),this.importAllListenersHandlers(r,e),this.importResolvers(r,e),this.importAllResolversListenerHandlers(r,e),r.kill(this._sessionKey),s.forEach(t=>{this.handleOnSetProp(this._props[t])})}kill(r){if(r!==this._sessionKey||!this._alive)return;const e=Object.keys(this._props);this.removeAllListeners(),e.forEach(s=>{this.removeAllPropListeners(s),this.removeProp(s)}),this._alive=!1}exportAllPropsListenerHandlers(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}return r!==this._sessionKey?null:{...this._propListenerHandlers}}exportAllResolvers(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}return r!==this._sessionKey?null:{...this._resolvers}}exportAllResolversListenerHandlers(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}return r!==this._sessionKey?null:{...this._resolverListenerHandlers}}exportAllListenersHandlers(r){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}return r!==this._sessionKey?null:[...this._listenerHandlers]}silentImportProps(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}const s=r.props;Object.entries(s).forEach(([t,a])=>{if(this.hasProp(t)){if(!e)return;this.silentSetProp(t,a)}else this.silentAddProp(t,a)})}silentSetProp(r,e){if(!this.hasProp(r)){console.error(`Tardigrade: prop "${r}" wasn't registered. You have to add this prop first`);return}const s=(h,u)=>{this._props[h].value=u},t=this._props[r],a=n(e);if(!c(e)){s(r,null);return}if(t.type!==a){console.error(`Tardigrade: new value must have same type as initial value for prop "${r}"`);return}if(!t.isValueScalar)try{JSON.stringify(e)}catch{console.error("Tardigrade: complex data has to be json-friendly");return}s(r,e)}silentAddProp(r,e){if(!this._alive){console.error("Tardigrade: this store doesn't support yet");return}if(this.hasProp(r)){console.error("Tardigrade: prop can't be override, you have to remove prop first");return}if(!c(e)){console.error("Tardigrade: value can't be nullable");return}const s=n(e),t=f(e);if(t){this._props[r]={name:r,value:e,type:s,isValueScalar:t};return}try{JSON.stringify(e)}catch{console.error("Tardigrade: complex data has to be json-friendly");return}this._props[r]={name:r,value:e,type:s,isValueScalar:t}}importAllResolversListenerHandlers(r,e){const s=r.exportAllResolversListenerHandlers(this._sessionKey);this._propListenerHandlers=e?{...this._resolverListenerHandlers,...s}:{...s,...this._resolverListenerHandlers}}importAllPropsListenerHandlers(r,e){const s=r.exportAllPropsListenerHandlers(this._sessionKey);this._propListenerHandlers=e?{...this._propListenerHandlers,...s}:{...s,...this._propListenerHandlers}}importAllListenersHandlers(r,e){const s=r.exportAllListenersHandlers(this._sessionKey),t=[...this._listenerHandlers,...s];this._listenerHandlers=e?[...new Set(t)]:t}isPropListened(r){return l(this._propListenerHandlers,r)}handleOnCallResolver(r,e){for(const s of this._listenerHandlers)s(r,e,this.props)}handleOnSetProp(r){if(this.isPropListened(r.name))for(const e of this._propListenerHandlers[r.name])e(r.value);for(const e of this._listenerHandlers)e(r.name,r.value,this.props)}cloneComplexData(r){return JSON.parse(JSON.stringify(r))}get props(){if(!this._alive)return console.error("Tardigrade: this store doesn't support yet"),{};const r={};return Object.entries(this._props).forEach(([e,s])=>{r[e]=s.isValueScalar?s.value:this.cloneComplexData(s.value)}),r}}const _=(()=>Symbol(crypto.randomUUID()))();console.log("Tardigrade works!");const y=(i,r)=>{r=r||{};const e=new v(_,r);return i&&Object.entries(i).forEach(([s,t])=>{switch(n(t)){case o.Function:case o.AsyncFunction:e.addResolver(s,t);break;case o.Number:case o.String:case o.Boolean:case o.Array:case o.Object:e.addProp(s,t);break;case o.Null:case o.Undefined:default:console.warn(`Tardigrade: data item "${s}" has incorrect type`);break}}),e};return d.createTardigrade=y,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"}),d}({});
